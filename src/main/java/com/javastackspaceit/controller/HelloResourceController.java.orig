package com.javastackspaceit.controller;

<<<<<<< HEAD
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.GetMapping;
=======
import java.util.Optional;

import javax.jws.soap.SOAPBinding.Use;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
>>>>>>> added spring security
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.javastackspaceit.dto.AuthRequest;
<<<<<<< HEAD
import com.javastackspaceit.util.JwtUtil;

@RestController
public class HelloResourceController {

	@Autowired
	AuthenticationManager authenticationManager;
	@Autowired
	private JwtUtil jwtUtil;
	private String reakeshTestUser="rakesh made changes";
	private String rajeshStringTest="rajesh";
	@GetMapping(value = "/")
=======
import com.javastackspaceit.model.User;
import com.javastackspaceit.repository.UserRepository;
import com.javastackspaceit.util.JwtUtil;

@RestController
@CrossOrigin(origins = "http://localhost:4200")
public class HelloResourceController {

	@Autowired
	private UserRepository userRepository;
	private @Autowired AuthenticationManager authenticationManager;
	@Autowired
	private JwtUtil jwtUtil;

	@GetMapping(value = "/hello")
>>>>>>> added spring security
	public String hello() {

		return " Hello world";
	}

	@PostMapping(value = "/authenticate")
	public String generateToken(@RequestBody AuthRequest authRequest) throws Exception {
		try {
<<<<<<< HEAD
=======
			System.out.println(authRequest.getPassword() + " " + authRequest.getUserName());
>>>>>>> added spring security
			authenticationManager.authenticate(
					new UsernamePasswordAuthenticationToken(authRequest.getUserName(), authRequest.getPassword()));

		} catch (Exception exception) {
			throw new Exception("Invalid username/password");
		}
		return jwtUtil.generateToken(authRequest.getUserName());

	}

<<<<<<< HEAD
 @DeleteMapping(value = "/delete")
	public String delete() {
		return " delete method";
=======
	@GetMapping("/user/{userName}")
	public User getUser(@PathVariable("userName") final String userName) {
		User userData = null;
		Optional<User> user = userRepository.findByUserName(userName);
		if (user.isPresent()) {
			userData = user.get();
		}
		return userData;
	}

	@PostMapping(value="/signup")
	public User signUpUser(User user) {
		return userRepository.save(user);
>>>>>>> added spring security
	}
}
